<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Global_Overlay">
        <control type="image">
            <include>Animation_FadeIn</include>
            <include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation_FadeOut</include>
            <include>Dimensions_Fullscreen</include>
            <texture border="2">common/black-back.png</texture>
        </control>
    </include>

    <include name="Flix_Global_Videowindow">
        <control type="image" description="Background">
            <include>Dimensions_TrailerScreen</include>
            <texture colordiffuse="black">common/white.png</texture>
            <visible>Player.HasVideo</visible>
        </control>
        <control type="videowindow">
            <visible>Player.HasVideo</visible>
            <include>Dimensions_TrailerScreen</include>
        </control>
        <!-- <control type="image" description="Background">
            <include>Dimensions_TrailerScreen</include>
            <texture colordiffuse="HomePanel">common/bg.jpg</texture>
            <visible>!Window.IsVisible(Home) | [Window.IsVisible(Home) + [Skin.HasSetting(HomeMulti) | $EXP[Exp_InfoVisible]]]</visible>
        </control> -->
    </include>

    <include name="Flix_Global_Videowindow_Hidden">
        <control type="videowindow">
            <visible>Player.HasVideo</visible>
            <include>Dimensions_TrailerScreen</include>
        </control>
    </include>

    <include name="Global_Videowindow">
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="black">common/white.png</texture>
        </control>
        <control type="videowindow">
            <visible>Player.HasVideo</visible>
            <include>Dimensions_Fullscreen</include>
        </control>
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="HomePanel">common/bg.jpg</texture>
            <visible>!Window.IsVisible(Home) | [Window.IsVisible(Home) + [Skin.HasSetting(HomeMulti) | $EXP[Exp_InfoVisible]]]</visible>
        </control>
    </include>

    <include name="Global_Videowindow_Hidden">
        <control type="videowindow">
            <visible>Player.HasVideo</visible>
            <include>Dimensions_Fullscreen</include>
        </control>
    </include>

    <include name="Global_Visualisation">
        <control type="group">
            <visible>String.IsEmpty(Window(10025).Property(PlayingBackgroundMedia)) + Player.HasAudio</visible>

            <control type="visualisation">
                <visible>Skin.HasSetting(OSDVisualisation.ShowFanart) | [!Skin.HasSetting(musicvis.fanartfallback) + [Skin.HasSetting(ArtistSlideShow.Disabled)]]</visible>
                <description>visualisation</description>
                <include>Dimensions_Fullscreen</include>
                <include>Animation_FadeIn</include>
                <include>Animation_FadeOut</include>
            </control>

            <control type="multiimage">
                <aspectratio>scale</aspectratio>
                <include>Dimensions_Fullscreen</include>
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <fadetime>600</fadetime>
                <loop>true</loop>
                <imagepath background="true">$VAR[Image_ArtistFanartVis]</imagepath>
                <animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <include>Animation_FadeIn</include>
                <include>Animation_FadeOut</include>
            </control>

        </control>
    </include>

    <include name="Global_Background">
        <control type="multiimage" id="7975">
            <left>-2160</left>
            <width>1</width>
            <height>1</height>
            <include>Defs_TimePerImage</include>
            <randomize>true</randomize>
            <fadetime>600</fadetime>
            <imagepath background="true">$VAR[Global_Background_ImageBlur_Var]</imagepath>
            <visible>!Skin.HasSetting(DisableBlur)</visible>
        </control>
        <include condition="Skin.HasSetting(global.showvideo) + !Skin.HasSetting(HomeMultiFlixView)">Global_Videowindow</include>
        <include condition="!Skin.HasSetting(global.showvideo) + !Skin.HasSetting(HomeMultiFlixView)">Global_Videowindow_Hidden</include>
        <include condition="Skin.HasSetting(global.showvisualisation)">Global_Visualisation</include>
        <control type="group">
            <visible>$EXP[Exp_GlobalBackground]</visible>
            <control type="image">
                <texture colordiffuse="Background">common/bg.jpg</texture>
            </control>
            <control type="multiimage">
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <width>1920</width>
                <height>1080</height>
                <aspectratio>scale</aspectratio>
                <include condition="!Skin.HasSetting(DisableBlur)">Defs_Global_Fade_Blur</include>
                <fadetime>600</fadetime>
                <animation effect="fade" start="45" end="15" reversible="false" condition="!Skin.HasSetting(DisableBackgroundOverlay) + [Skin.HasSetting(EnableBlur) | ![[!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]]]">Conditional</animation>
                <animation effect="fade" start="60" end="45" reversible="false" condition="!Skin.HasSetting(DisableBackgroundOverlay) + [!Skin.HasSetting(EnableBlur) | [!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]]">Conditional</animation>
                <animation effect="fade" start="10" end="30" reversible="false" condition="!Skin.HasSetting(DisableBackgroundOverlay) + Skin.HasSetting(DisableBlur)">Conditional</animation>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <visible>!Skin.HasSetting(HomeMultiNetflixDark) | !Skin.HasSetting(HomeMultiFlixView)</visible>
            </control>

            <control type="multiimage">
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <width>1920</width>
                <!-- <height>1080</height> -->
                <aspectratio>scale</aspectratio>
                <include condition="!Skin.HasSetting(DisableBlur)">Defs_Global_Fade_Blur</include>
                <fadetime>600</fadetime>
                <!-- <animation effect="fade" start="45" end="15" reversible="false" condition="Skin.HasSetting(EnableBlur) | ![[!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]]">Conditional</animation> -->
                <!-- <animation effect="fade" start="60" end="45" reversible="false" condition="!Skin.HasSetting(EnableBlur) | [!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]">Conditional</animation> -->
                <!-- <animation effect="fade" start="10" end="30" reversible="false" condition="Skin.HasSetting(DisableBlur)">Conditional</animation> -->
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <!-- <colordiffuse>ffffffff</colordiffuse> -->
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <visible>Skin.HasSetting(HomeMultiNetflixDark)</visible>
            </control>
            <control type="multiimage">
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <width>1920</width>
                <height>1080</height>
                <aspectratio>scale</aspectratio>
                <include condition="!Skin.HasSetting(DisableBlur)">Defs_Global_Fade_Blur</include>
                <fadetime>600</fadetime>
                <!-- <animation effect="fade" start="45" end="15" reversible="false" condition="Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml) | Window.IsActive(Settings.xml) | Window.IsActive(AddonBrowser.xml)">Conditional</animation> -->
                <!-- <animation effect="fade" start="60" end="45" reversible="false" condition="Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml) | Window.IsActive(Settings.xml) | Window.IsActive(AddonBrowser.xml)">Conditional</animation> -->

                <!-- <animation effect="fade" start="10" end="30" reversible="true" condition="Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml) | Window.IsActive(Settings.xml) | Window.IsActive(AddonBrowser.xml)">Conditional</animation> -->
                <imagepath background="true">common/vignette-nf.png</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <visible>Skin.HasSetting(HomeMultiNetflixDark)</visible>
            </control>

        </control>

        <include condition="Skin.HasSetting(global.showvideo) + Skin.HasSetting(HomeMultiFlixView) + Window.IsVisible(Home.xml)">Flix_Global_Videowindow</include>
        <include condition="!Skin.HasSetting(global.showvideo) + Skin.HasSetting(HomeMultiFlixView) + Window.IsVisible(Home.xml)">Flix_Global_Videowindow_Hidden</include>

        <control type="group">
            <control type="multiimage">
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <width>1920</width>
                <aspectratio>scale</aspectratio>
                <include condition="!Skin.HasSetting(DisableBlur)">Defs_Global_Fade_Blur</include>

                <animation effect="fade" start="45" end="15" reversible="false" condition="[!Window.IsVisible(Home.xml) | Window.IsVisible(DialogVideoInfo.xml)] + !Skin.HasSetting(DisableBackgroundOverlay) + [Skin.HasSetting(EnableBlur) | ![[!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]]]">Conditional</animation>
                <animation effect="fade" start="60" end="45" reversible="false" condition="[!Window.IsVisible(Home.xml) | Window.IsVisible(DialogVideoInfo.xml)] + !Skin.HasSetting(DisableBackgroundOverlay) + [!Skin.HasSetting(EnableBlur) | [!Skin.HasSetting(OnlyBlurInfo)] | [Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsActive(DialogVideoInfo.xml) | Window.IsActive(DialogMusicInfo.xml) | Window.IsActive(DialogAddonInfo.xml)]]]">Conditional</animation>
                <animation effect="fade" start="10" end="30" reversible="false" condition="[!Window.IsVisible(Home.xml) | Window.IsVisible(DialogVideoInfo.xml)] + !Skin.HasSetting(DisableBackgroundOverlay) + Skin.HasSetting(DisableBlur)">Conditional</animation>

                <fadetime>600</fadetime>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <visible>Skin.HasSetting(HomeMultiFlixView) + !Player.HasVideo + !String.IsEmpty(ListItem.Art(fanart))</visible>
            </control>
            <control type="multiimage">
                <include>Defs_TimePerImage</include>
                <randomize>true</randomize>
                <width>1920</width>
                <height>1080</height>
                <aspectratio>scale</aspectratio>
                <include condition="!Skin.HasSetting(DisableBlur)">Defs_Global_Fade_Blur</include>
                <fadetime>600</fadetime>
                <imagepath background="true">common/vignette-flix-basic.png</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(KenBurnsEffect)">Conditional</animation>
                <visible>Skin.HasSetting(HomeMultiFlixView) + [!String.IsEmpty(ListItem.Art(fanart)) | Player.HasVideo] + Window.IsVisible(Home.xml)</visible>
            </control>
        </control>

        <include>Object_NowPlaying</include>
        <include condition="!Skin.HasSetting(HomeMultiFlixView)">Object_Codecs</include>
        <include>Object_Languages</include>
    </include>

    <variable name="Global_Background_ImageBlur_Var">
        <!-- Parent Folder -->
        <value condition="Skin.HasSetting(NoFanart) | ListItem.IsParentFolder">$VAR[Global_Background_Image_NoFanart]</value>

        <!-- Season View Episodes List -->
        <value condition="Control.HasFocus(530) + !String.IsEmpty(Container(530).ListItem.Art(season.poster))">$INFO[Container(530).ListItem.Art(season.poster)]</value>

        <!-- General Artwork -->
        <value condition="!String.IsEmpty(Container.ListItem.Art(season.poster))">$INFO[Container.ListItem.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(tvshow.poster))">$INFO[Container.ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(poster))">$INFO[Container.ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(thumb)) + !String.IsEqual(Container.ListItem.Art(thumb),Container.ListItem.ActualIcon)">$INFO[Container.ListItem.Art(thumb)]</value>

        <!-- Pictures -->
        <value condition="Window.IsVisible(MyPics.xml) + !String.IsEmpty(ListItem.FileNameAndPath)">$INFO[ListItem.FileNameAndPath]</value>

        <!-- Default -->
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value>special://skin/extras/backgrounds/default2.jpg</value>
    </variable>

    <variable name="Global_Background_Image_NoFanart">
        <value condition="[Window.IsVisible(home) | Window.IsVisible(1135)] + !String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist))">$INFO[Container(9988).ListItem.Art(fanart)]</value>
        <value condition="[Window.IsVisible(home) | Window.IsVisible(1135)] + !String.IsEmpty(Container(301).ListItem.Property(Background))">$INFO[Container(301).ListItem.Property(Background)]</value>
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Global_Background_Image">
        <value condition="Skin.HasSetting(NoFanart)">$VAR[Global_Background_Image_NoFanart]</value>
        <value condition="Skin.HasSetting(EnableBlur) + !Skin.HasSetting(OnlyBlurInfo) + ![Window.IsVisible(Home) + !Skin.HasSetting(HomeMulti)]">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
        <value condition="Skin.HasSetting(EnableBlur) + Skin.HasSetting(OnlyBlurInfo) + [Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml)]">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
        <value condition="!Skin.HasSetting(DisableBlur)">$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage)]</value>
        <value condition="Skin.HasSetting(NoFanart)">$VAR[Global_Background_Image_NoFanart]</value>
        <value>$VAR[Global_Background_Image_Var]</value>
    </variable>

    <variable name="Global_Background_Image_Var">
        <value condition="Skin.HasSetting(EnableBlur) + Skin.HasSetting(PosterBlur) + [!Window.IsVisible(Home) | Skin.HasSetting(HomeMulti)] + !Skin.HasSetting(OnlyBlurInfo) + !String.IsEmpty(Container.ListItem.Art(season.poster))">$INFO[Container.ListItem.Art(season.poster)]</value>
        <value condition="Skin.HasSetting(EnableBlur) + Skin.HasSetting(PosterBlur) + [!Window.IsVisible(Home) | Skin.HasSetting(HomeMulti)] + !Skin.HasSetting(OnlyBlurInfo) + !String.IsEmpty(Container.ListItem.Art(poster))">$INFO[Container.ListItem.Art(poster)]</value>
        <value condition="Skin.HasSetting(EnableBlur) + Skin.HasSetting(PosterBlur) + [!Window.IsVisible(Home) | Skin.HasSetting(HomeMulti)] + !Skin.HasSetting(OnlyBlurInfo) + !String.IsEmpty(Container.ListItem.Art(tvshow.poster))">$INFO[Container.ListItem.Art(tvshow.poster)]</value>
        <value condition="Skin.HasSetting(EnableBlur) + Skin.HasSetting(PosterBlur) + [!Window.IsVisible(Home) | Skin.HasSetting(HomeMulti)] + !Skin.HasSetting(OnlyBlurInfo) + !String.IsEmpty(Container.ListItem.Art(thumb)) + !String.StartsWith(Container.ListItem.Art(thumb),special://skin/extras/icons/) + !String.StartsWith(Container.ListItem.Art(thumb),Default)">$INFO[Container.ListItem.Art(thumb)]</value>

        <!-- Next up -->
        <value condition="Window.IsVisible(script-nextup-notification-PostPlayInfo.xml)">$INFO[Window.Property(background)]</value>

        <!-- Next Aired -->
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(200) | Control.HasFocus(8200)] + !String.IsEmpty(Container(200).ListItem.Property(Fanart))">$INFO[Container(200).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(201) | Control.HasFocus(8201)] + !String.IsEmpty(Container(201).ListItem.Property(Fanart))">$INFO[Container(201).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(202) | Control.HasFocus(8202)] + !String.IsEmpty(Container(202).ListItem.Property(Fanart))">$INFO[Container(202).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(203) | Control.HasFocus(8203)] + !String.IsEmpty(Container(203).ListItem.Property(Fanart))">$INFO[Container(203).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(204) | Control.HasFocus(8204)] + !String.IsEmpty(Container(204).ListItem.Property(Fanart))">$INFO[Container(204).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(205) | Control.HasFocus(8205)] + !String.IsEmpty(Container(205).ListItem.Property(Fanart))">$INFO[Container(205).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(206) | Control.HasFocus(8206)] + !String.IsEmpty(Container(206).ListItem.Property(Fanart))">$INFO[Container(206).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(207) | Control.HasFocus(8207)] + !String.IsEmpty(Container(207).ListItem.Property(Fanart))">$INFO[Container(207).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(208) | Control.HasFocus(8208)] + !String.IsEmpty(Container(208).ListItem.Property(Fanart))">$INFO[Container(208).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(209) | Control.HasFocus(8209)] + !String.IsEmpty(Container(209).ListItem.Property(Fanart))">$INFO[Container(209).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(210) | Control.HasFocus(8210)] + !String.IsEmpty(Container(210).ListItem.Property(Fanart))">$INFO[Container(210).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(211) | Control.HasFocus(8211)] + !String.IsEmpty(Container(211).ListItem.Property(Fanart))">$INFO[Container(211).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(212) | Control.HasFocus(8212)] + !String.IsEmpty(Container(212).ListItem.Property(Fanart))">$INFO[Container(212).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(213) | Control.HasFocus(8213)] + !String.IsEmpty(Container(213).ListItem.Property(Fanart))">$INFO[Container(213).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(214) | Control.HasFocus(8214)] + !String.IsEmpty(Container(214).ListItem.Property(Fanart))">$INFO[Container(214).ListItem.Property(Fanart)]</value>
        <value condition="[Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)] + [Control.HasFocus(215) | Control.HasFocus(8215)] + !String.IsEmpty(Container(215).ListItem.Property(Fanart))">$INFO[Container(215).ListItem.Property(Fanart)]</value>

        <!-- Settings Widget -->
        <value condition="Window.IsVisible(Home) + Skin.HasSetting(HomeMulti) + [String.IsEqual(Container(9989).ListItem.Property(list),Settings) | String.IsEqual(Container(301).ListItem.Property(widget),Settings)]">$VAR[Global_Background_Image_NoFanart]</value>

        <!-- Weather -->
        <value condition="[Window.IsVisible(weather) | [Window.IsVisible(Home) + !Skin.HasSetting(HomeMulti) + String.IsEqual(Container(301).ListItem.Property(widget),Weather)] | [Window.IsVisible(Home) + Skin.HasSetting(HomeMulti) + [Control.HasFocus(9999) | String.IsEqual(Container(9989).ListItem.Property(list),Weather)]]] + System.HasAddon(resource.images.weatherfanart.multi)">$INFO[Window(Weather).Property(Current.FanartCode),resource://resource.images.weatherfanart.multi/,/]</value>


        <!-- Fanart -->
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart))">$INFO[ListItem.Property(Fanart)]</value>
        <value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.Property(Fanart_Image))">$INFO[Container.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(Container.Property(Fanart))">$INFO[Container.Property(Fanart)]</value>

        <!-- Home Fanart Widgets -->
        <value condition="!String.IsEmpty(Container.ListItem.Art(fanart)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Property(Fanart_Image)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Property(Fanart)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Property(Fanart)]</value>

        <!-- Home Fanart Fallbacks -->
        <value condition="!String.IsEmpty(Container.ListItem.Art(fanart)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Property(Fanart_Image)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Property(Fanart)) + Window.IsVisible(Home)">$INFO[Container.ListItem.Property(Fanart)]</value>

        <!-- Home Fanart Menu -->
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(HomeBackgroundImage)) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist))">$INFO[Skin.String(HomeBackgroundImage)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(5600).ListItem.Art(fanart)) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist))">$INFO[Container(5600).ListItem.Art(fanart)]</value>

        <!-- Home Fanart First Widget Item -->
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(13101).ListItem.Art(fanart)) + Control.IsVisible(13101)">$INFO[Container(13101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(23101).ListItem.Art(fanart)) + Control.IsVisible(23101)">$INFO[Container(23101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(33101).ListItem.Art(fanart)) + Control.IsVisible(33101)">$INFO[Container(33101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(43101).ListItem.Art(fanart)) + Control.IsVisible(43101)">$INFO[Container(43101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(53101).ListItem.Art(fanart)) + Control.IsVisible(53101)">$INFO[Container(53101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(63101).ListItem.Art(fanart)) + Control.IsVisible(63101)">$INFO[Container(63101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(73101).ListItem.Art(fanart)) + Control.IsVisible(73101)">$INFO[Container(73101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(83101).ListItem.Art(fanart)) + Control.IsVisible(83101)">$INFO[Container(83101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(93101).ListItem.Art(fanart)) + Control.IsVisible(93101)">$INFO[Container(93101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(103101).ListItem.Art(fanart)) + Control.IsVisible(103101)">$INFO[Container(103101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(113101).ListItem.Art(fanart)) + Control.IsVisible(113101)">$INFO[Container(113101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(123101).ListItem.Art(fanart)) + Control.IsVisible(123101)">$INFO[Container(123101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(133101).ListItem.Art(fanart)) + Control.IsVisible(133101)">$INFO[Container(133101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(143101).ListItem.Art(fanart)) + Control.IsVisible(143101)">$INFO[Container(143101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(153101).ListItem.Art(fanart)) + Control.IsVisible(153101)">$INFO[Container(153101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(163101).ListItem.Art(fanart)) + Control.IsVisible(163101)">$INFO[Container(163101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(173101).ListItem.Art(fanart)) + Control.IsVisible(173101)">$INFO[Container(173101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(183101).ListItem.Art(fanart)) + Control.IsVisible(183101)">$INFO[Container(183101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(193101).ListItem.Art(fanart)) + Control.IsVisible(193101)">$INFO[Container(193101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(203101).ListItem.Art(fanart)) + Control.IsVisible(203101)">$INFO[Container(203101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(213101).ListItem.Art(fanart)) + Control.IsVisible(213101)">$INFO[Container(213101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(223101).ListItem.Art(fanart)) + Control.IsVisible(223101)">$INFO[Container(223101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(233101).ListItem.Art(fanart)) + Control.IsVisible(233101)">$INFO[Container(233101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(243101).ListItem.Art(fanart)) + Control.IsVisible(243101)">$INFO[Container(243101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(253101).ListItem.Art(fanart)) + Control.IsVisible(253101)">$INFO[Container(253101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(263101).ListItem.Art(fanart)) + Control.IsVisible(263101)">$INFO[Container(263101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(273101).ListItem.Art(fanart)) + Control.IsVisible(273101)">$INFO[Container(273101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(283101).ListItem.Art(fanart)) + Control.IsVisible(283101)">$INFO[Container(283101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(293101).ListItem.Art(fanart)) + Control.IsVisible(293101)">$INFO[Container(293101).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(303101).ListItem.Art(fanart)) + Control.IsVisible(303101)">$INFO[Container(303101).ListItem.Art(fanart)]</value>

        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(993100).ListItem.Art(fanart)) + Control.IsVisible(993100)">$INFO[Container(993100).ListItem.Art(fanart)]</value>

        <!-- Submenu Hub -->
        <value condition="Window.IsVisible(1135) + !String.IsEmpty(Container(5610).ListItem.Art(fanart))">$INFO[Container(5610).ListItem.Art(fanart)]</value>

        <!-- Pictures -->
        <value condition="Window.IsVisible(MyPics.xml) + !String.IsEmpty(ListItem.FileNameAndPath)">$INFO[ListItem.FileNameAndPath]</value>

        <!-- Default -->
        <value>$VAR[Global_Background_Image_NoFanart]</value>
    </variable>
</includes>
